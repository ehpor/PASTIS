name: pastis CI

on:
  pull_request:
    types: [review_requested, ready_for_review]
    branches:
    - master
    - develop

jobs:
  syntax-lint:
    name: flake8 (syntax only) on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # Let GitHub auto set this.
      # max-parallel: 2
      matrix:
        python-version: [3.10]
    env:
        # http://flake8.pycqa.org/en/latest/user/error-codes.html
        EXCLUDE_DIRS: ""
        SELECTIONS: E9
        IGNORE: ""
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install flake8
      shell: bash
    - name: Lint with flake8
      run: flake8 . --max-line-length=127 --count --statistics --exclude=$EXCLUDE_DIRS --select=$SELECTIONS --ignore=$IGNORE
      shell: bash

  style-lint:
    name: flake8 on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.10]
    env:
      # http://flake8.pycqa.org/en/latest/user/error-codes.html
      EXCLUDE_DIRS: ""
      SELECTIONS: E4,E7,W6,F821,F822
      IGNORE: W605
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install flake8
        shell: bash
      - name: Lint with flake8
        run: flake8 . --max-line-length=127 --count --statistics --exclude=$EXCLUDE_DIRS --select=$SELECTIONS --ignore=$IGNORE
        shell: bash

  pytest:
    name: Pytests on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    needs: syntax-lint
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.10]
        os: [ubuntu-latest]
        # if we ever need to enable this for Windows too, just replace with this line:
        # os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
      with:
        lfs: true
    - uses: actions/setup-python@v1
      with:
          python-version: ${{ matrix.python-version }}
    - uses: conda-incubator/setup-miniconda@v2
      with:
          auto-update-conda: true
          auto-activate-base: false
    - name: Install dependencies
      run: |
        sed -E 's/[ \t]*-[ \t]*python[=<>0-9.,]*/  - python=${{ matrix.python-version }}/' environment.yml > environment2.yml
        conda env create --name ci-env --file environment2.yml
        conda activate ci-env
        python setup.py develop
      shell: bash -l {0}
    - name: Test with pytest
      run: |
        conda activate ci-env
        git lfs pull
        pytest pastis
      shell: bash -l {0}
